name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.1-alpine
        env:
          # Postgres will create a database with the following credentials
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
    env:
      TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
      TOKEN_EXPIRES_IN: 1h
      SMTP_SERVICE: Gmail
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 465
      SMTP_SECURE_CONNECTION: true
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_SENDER: ${{ secrets.SMTP_USERNAME }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v4.1.1

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install server dependencies
      run: npm ci

    - name: Type check server
      run: npm run typecheck -w=server

    - name: Lint server
      run: npm run lint -w=server

    - name: Test server
      run: npm test -w=server

    - name: Build server
      run: npm run build -w=server

    - name: Start server
      run: npm run start -w=server &
      env:
          DB_USER: testuser
          DB_PASSWORD: testpassword
          DB_NAME: testdb
          DB_HOST: localhost
          DB_SSL: false
          PORT: 3000

    - name: Health probe
      uses: Jtalk/url-health-check-action@v4
      with:
        max-attempts: 5
        retry-delay: 5s
        url: http://localhost:3000/health
    
    - name: Readiness probe
      uses: Jtalk/url-health-check-action@v4
      with:
        max-attempts: 5
        retry-delay: 5s
        url: http://localhost:3000/ready
