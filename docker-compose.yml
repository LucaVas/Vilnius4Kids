version: '3.8'

services:
  database:
    image: postgres:16.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: homedesigndb
    ports:
      - "5435:5432"
    volumes:
      - homedesigndb:/var/lib/postgresql/data

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile-compose
    env_file:
      - ./server/.env
    environment:
      DB_HOST: database
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: homedesigndb
      DB_SSL: false
    ports:
       - 3000:3000
    depends_on:
      - database

  # start up a client (and proxy) server
  # client:
  #   build:
  #     context: .
  #     dockerfile: ./client/Dockerfile
  #     args:
  #       # We want to pass in the configuration of how the
  #       # user will reach the server. This must be decided
  #       # before the `npm run build`, since we need to prepare
  #       # these values for static JS files that will be served
  #       # by NGINX to our visitors.
  #       VITE_API_ORIGIN: http://localhost:3001
  #       VITE_API_PATH: /api/v1/trpc
  #   environment:
      # Since our client NGINX server is not only serving static
      # files, but also routing /api requests to our API server,
      # we need to inform NGINX how it can reach the API server.
      # Our API server is accessible as "http://server:3000".
      # Docker Compose does some DNS magic for us to map the
      # service name (server) to the internal container IP.
      # However, when we will deploy our application to
      # production, we will not use Docker Compose, and we
      # need to use a different URL to reach our API server.
      # To support both environments, we will use an environment
      # variable to configure the proxy pass.
      # Our development environment will use the provided value
      # below, while our production environment will provide
      # a different value.
    #   API_PROXY_PASS: http://server:3000
    # ports:
    #   - "3001:80"
    # depends_on:
    #   - server

volumes:
  homedesigndb:
